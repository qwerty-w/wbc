"""Rename input/unspent cols, add amount in unspent

Revision ID: fc79976471d3
Revises: aae9ec423e34
Create Date: 2024-08-30 16:24:16.649444

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'fc79976471d3'
down_revision: Union[str, None] = 'aae9ec423e34'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('blockchain_input', 'outvout', new_column_name='vout')

    op.alter_column('blockchain_unspent', 'outxid', new_column_name='txid')
    op.alter_column('blockchain_unspent', 'outvout', new_column_name='vout')
    op.alter_column('blockchain_unspent', 'addresstr', new_column_name='address')
    op.add_column('blockchain_unspent', sa.Column('amount', sa.Integer(), nullable=False))


    op.drop_constraint('blockchain_input_outxid_outvout_key', 'blockchain_input', type_='unique')
    op.create_unique_constraint('blockchain_input_outxid_vout_key', 'blockchain_input', ['outxid', 'vout'])

    op.drop_constraint('blockchain_unspent_outxid_outvout_fkey', 'blockchain_unspent', type_='foreignkey')
    op.create_foreign_key('blockchain_unspent_txid_vout_fkey', 'blockchain_unspent', 'blockchain_output', ['txid', 'vout'], ['txid', 'vout'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('blockchain_input', 'vout', new_column_name='outvout')

    op.alter_column('blockchain_unspent', 'txid', new_column_name='outxid')
    op.alter_column('blockchain_unspent', 'vout', new_column_name='outvout')
    op.alter_column('blockchain_unspent', 'address', new_column_name='addresstr')
    op.drop_column('blockchain_unspent', 'amount')


    op.drop_constraint('blockchain_input_outxid_vout_key', 'blockchain_input', type_='unique')
    op.create_unique_constraint('blockchain_input_outxid_outvout_key', 'blockchain_input', ['outxid', 'outvout'])

    op.drop_constraint('blockchain_unspent_txid_vout_fkey', 'blockchain_unspent', type_='foreignkey')
    op.create_foreign_key('blockchain_unspent_outxid_outvout_fkey', 'blockchain_unspent', 'blockchain_output', ['outxid', 'outvout'], ['txid', 'vout'])
    # ### end Alembic commands ###
