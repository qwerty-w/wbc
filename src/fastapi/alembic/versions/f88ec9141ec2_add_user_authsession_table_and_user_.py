"""Add user_authsession table and user.aeskey_sha256digest column

Revision ID: f88ec9141ec2
Revises: 4914c813997a
Create Date: 2024-07-27 21:12:30.242981

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f88ec9141ec2'
down_revision: Union[str, None] = '4914c813997a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_authsession',
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('userid', sa.Integer(), nullable=False),
    sa.Column('expire', sa.DateTime(), nullable=False),
    sa.Column('revoked', sa.Boolean(), nullable=False),
    sa.Column('ip', sa.String(), nullable=True),
    sa.Column('user_agent', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['userid'], ['user.id'], ),
    sa.PrimaryKeyConstraint('token')
    )
    op.add_column('user', sa.Column('aeskey_sha256digest', sa.LargeBinary(length=32), nullable=False))
    # if data exists
    # op.add_column('user', sa.Column('aeskey_sha256digest', sa.LargeBinary(length=32), nullable=True))
    # op.execute("update public.user set aeskey_sha256digest = ''")
    # op.alter_column('user', 'aeskey_sha256digest', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'aeskey_sha256digest')
    op.drop_table('user_authsession')
    # ### end Alembic commands ###
